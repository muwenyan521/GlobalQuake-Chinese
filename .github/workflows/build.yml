name: Java CI and Release

on:
  push:
    branches:
      - 'main'
      - 'develop'
  pull_request:
    branches:
      - 'main'
      - 'develop'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B clean install -Dmaven.test.skip=true

      - name: Get version
        id: get_version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

  release:
    name: Create Release
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}-${{ github.run_id }}
          name: Release v${{ steps.get_version.outputs.VERSION }} (${{ github.run_id }})
          body: Automated release triggered by ${{ github.sha }}
          draft: false
          prerelease: ${{ contains(github.ref, 'develop') }}
          files: |
            GlobalQuakeClient/target/GlobalQuake-${{ steps.get_version.outputs.VERSION }}-jar-with-dependencies.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
